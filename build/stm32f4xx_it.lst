ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.p2align 2,,3
  23              		.global	NMI_Handler
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	NMI_Handler:
  29              	.LFB133:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 2


  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim9;
  59:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  60:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart6;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  62:Core/Src/stm32f4xx_it.c **** 
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f4xx_it.c **** /**
  71:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32f4xx_it.c ****   */
  73:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32f4xx_it.c **** {
  30              		.loc 1 74 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.L2:
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f4xx_it.c **** 
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 3


  37              		.loc 1 79 3 discriminator 1 view .LVU1
  80:Core/Src/stm32f4xx_it.c ****   {
  81:Core/Src/stm32f4xx_it.c ****   }
  38              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32f4xx_it.c ****   {
  39              		.loc 1 79 9 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE133:
  44 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.p2align 2,,3
  47              		.global	HardFault_Handler
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	HardFault_Handler:
  53              	.LFB134:
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c **** }
  84:Core/Src/stm32f4xx_it.c **** 
  85:Core/Src/stm32f4xx_it.c **** /**
  86:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f4xx_it.c ****   */
  88:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f4xx_it.c **** {
  54              		.loc 1 89 1 view -0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.L5:
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f4xx_it.c **** 
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c ****   while (1)
  61              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32f4xx_it.c ****   {
  95:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   }
  62              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32f4xx_it.c ****   {
  63              		.loc 1 93 9 discriminator 1 view .LVU7
  64 0000 FEE7     		b	.L5
  65              		.cfi_endproc
  66              	.LFE134:
  68 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.global	MemManage_Handler
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	MemManage_Handler:
  77              	.LFB135:
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 4


  98:Core/Src/stm32f4xx_it.c **** }
  99:Core/Src/stm32f4xx_it.c **** 
 100:Core/Src/stm32f4xx_it.c **** /**
 101:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32f4xx_it.c ****   */
 103:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f4xx_it.c **** {
  78              		.loc 1 104 1 view -0
  79              		.cfi_startproc
  80              		@ Volatile: function does not return.
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.L7:
 105:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c **** 
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c ****   while (1)
  85              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32f4xx_it.c ****   {
 110:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   }
  86              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32f4xx_it.c ****   {
  87              		.loc 1 108 9 discriminator 1 view .LVU11
  88 0000 FEE7     		b	.L7
  89              		.cfi_endproc
  90              	.LFE135:
  92 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  93              		.align	1
  94              		.p2align 2,,3
  95              		.global	BusFault_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	BusFault_Handler:
 101              	.LFB136:
 113:Core/Src/stm32f4xx_it.c **** }
 114:Core/Src/stm32f4xx_it.c **** 
 115:Core/Src/stm32f4xx_it.c **** /**
 116:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32f4xx_it.c ****   */
 118:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f4xx_it.c **** {
 102              		.loc 1 119 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L9:
 120:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c **** 
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c ****   while (1)
 109              		.loc 1 123 3 discriminator 1 view .LVU13
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 5


 124:Core/Src/stm32f4xx_it.c ****   {
 125:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   }
 110              		.loc 1 127 3 discriminator 1 view .LVU14
 123:Core/Src/stm32f4xx_it.c ****   {
 111              		.loc 1 123 9 discriminator 1 view .LVU15
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE136:
 116 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.global	UsageFault_Handler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	UsageFault_Handler:
 125              	.LFB137:
 128:Core/Src/stm32f4xx_it.c **** }
 129:Core/Src/stm32f4xx_it.c **** 
 130:Core/Src/stm32f4xx_it.c **** /**
 131:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f4xx_it.c ****   */
 133:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f4xx_it.c **** {
 126              		.loc 1 134 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.L11:
 135:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c **** 
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c ****   while (1)
 133              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32f4xx_it.c ****   {
 140:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   }
 134              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32f4xx_it.c ****   {
 135              		.loc 1 138 9 discriminator 1 view .LVU19
 136 0000 FEE7     		b	.L11
 137              		.cfi_endproc
 138              	.LFE137:
 140 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 141              		.align	1
 142              		.p2align 2,,3
 143              		.global	SVC_Handler
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	SVC_Handler:
 149              	.LFB138:
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 6


 143:Core/Src/stm32f4xx_it.c **** }
 144:Core/Src/stm32f4xx_it.c **** 
 145:Core/Src/stm32f4xx_it.c **** /**
 146:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Core/Src/stm32f4xx_it.c ****   */
 148:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 149:Core/Src/stm32f4xx_it.c **** {
 150              		.loc 1 149 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Core/Src/stm32f4xx_it.c **** 
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** }
 155              		.loc 1 156 1 view .LVU21
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE138:
 160 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	DebugMon_Handler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	DebugMon_Handler:
 169              	.LFB147:
 170              		.cfi_startproc
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c **** /**
 159:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 160:Core/Src/stm32f4xx_it.c ****   */
 161:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 171              		.loc 1 161 6 view -0
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE147:
 179 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.p2align 2,,3
 182              		.global	PendSV_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	PendSV_Handler:
 188              	.LFB149:
 189              		.cfi_startproc
 162:Core/Src/stm32f4xx_it.c **** {
 163:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 7


 164:Core/Src/stm32f4xx_it.c **** 
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Core/Src/stm32f4xx_it.c **** 
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Core/Src/stm32f4xx_it.c **** }
 170:Core/Src/stm32f4xx_it.c **** 
 171:Core/Src/stm32f4xx_it.c **** /**
 172:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Core/Src/stm32f4xx_it.c ****   */
 174:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 190              		.loc 1 174 6 view -0
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE149:
 198 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 199              		.align	1
 200              		.p2align 2,,3
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	SysTick_Handler:
 207              	.LFB151:
 208              		.cfi_startproc
 175:Core/Src/stm32f4xx_it.c **** {
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Core/Src/stm32f4xx_it.c **** 
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Core/Src/stm32f4xx_it.c **** 
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Core/Src/stm32f4xx_it.c **** }
 183:Core/Src/stm32f4xx_it.c **** 
 184:Core/Src/stm32f4xx_it.c **** /**
 185:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 186:Core/Src/stm32f4xx_it.c ****   */
 187:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 209              		.loc 1 187 6 view -0
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 7047     		bx	lr
 214              		.cfi_endproc
 215              	.LFE151:
 217 0002 00BF     		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.p2align 2,,3
 220              		.global	TIM1_BRK_TIM9_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	TIM1_BRK_TIM9_IRQHandler:
 226              	.LFB142:
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 8


 188:Core/Src/stm32f4xx_it.c **** {
 189:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Core/Src/stm32f4xx_it.c **** 
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Core/Src/stm32f4xx_it.c **** }
 197:Core/Src/stm32f4xx_it.c **** 
 198:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 199:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 200:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 203:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 204:Core/Src/stm32f4xx_it.c **** 
 205:Core/Src/stm32f4xx_it.c **** /**
 206:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 207:Core/Src/stm32f4xx_it.c ****   */
 208:Core/Src/stm32f4xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 209:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 209 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 210:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 211:Core/Src/stm32f4xx_it.c **** 
 212:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 213:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim9);
 232              		.loc 1 213 3 view .LVU26
 233 0000 0148     		ldr	r0, .L17
 234 0002 FFF7FEBF 		b	HAL_TIM_IRQHandler
 235              	.LVL0:
 236              	.L18:
 237 0006 00BF     		.align	2
 238              	.L17:
 239 0008 00000000 		.word	htim9
 240              		.cfi_endproc
 241              	.LFE142:
 243              		.section	.text.USART2_IRQHandler,"ax",%progbits
 244              		.align	1
 245              		.p2align 2,,3
 246              		.global	USART2_IRQHandler
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	USART2_IRQHandler:
 252              	.LFB143:
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 217:Core/Src/stm32f4xx_it.c **** }
 218:Core/Src/stm32f4xx_it.c **** 
 219:Core/Src/stm32f4xx_it.c **** /**
 220:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 9


 221:Core/Src/stm32f4xx_it.c ****   */
 222:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 223:Core/Src/stm32f4xx_it.c **** {
 253              		.loc 1 223 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 224:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 225:Core/Src/stm32f4xx_it.c **** 
 226:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 227:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 258              		.loc 1 227 3 view .LVU28
 259 0000 0148     		ldr	r0, .L20
 260 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 261              	.LVL1:
 262              	.L21:
 263 0006 00BF     		.align	2
 264              	.L20:
 265 0008 00000000 		.word	huart2
 266              		.cfi_endproc
 267              	.LFE143:
 269              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 270              		.align	1
 271              		.p2align 2,,3
 272              		.global	TIM7_IRQHandler
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	TIM7_IRQHandler:
 278              	.LFB144:
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 231:Core/Src/stm32f4xx_it.c **** }
 232:Core/Src/stm32f4xx_it.c **** 
 233:Core/Src/stm32f4xx_it.c **** /**
 234:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 235:Core/Src/stm32f4xx_it.c ****   */
 236:Core/Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
 237:Core/Src/stm32f4xx_it.c **** {
 279              		.loc 1 237 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 238:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 239:Core/Src/stm32f4xx_it.c **** 
 240:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 241:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 284              		.loc 1 241 3 view .LVU30
 285 0000 0148     		ldr	r0, .L23
 286 0002 FFF7FEBF 		b	HAL_TIM_IRQHandler
 287              	.LVL2:
 288              	.L24:
 289 0006 00BF     		.align	2
 290              	.L23:
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 10


 291 0008 00000000 		.word	htim7
 292              		.cfi_endproc
 293              	.LFE144:
 295              		.section	.text.USART6_IRQHandler,"ax",%progbits
 296              		.align	1
 297              		.p2align 2,,3
 298              		.global	USART6_IRQHandler
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	USART6_IRQHandler:
 304              	.LFB145:
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 245:Core/Src/stm32f4xx_it.c **** }
 246:Core/Src/stm32f4xx_it.c **** 
 247:Core/Src/stm32f4xx_it.c **** /**
 248:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART6 global interrupt.
 249:Core/Src/stm32f4xx_it.c ****   */
 250:Core/Src/stm32f4xx_it.c **** void USART6_IRQHandler(void)
 251:Core/Src/stm32f4xx_it.c **** {
 305              		.loc 1 251 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 252:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 253:Core/Src/stm32f4xx_it.c **** 
 254:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 255:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 310              		.loc 1 255 3 view .LVU32
 311 0000 0148     		ldr	r0, .L26
 312 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 313              	.LVL3:
 314              	.L27:
 315 0006 00BF     		.align	2
 316              	.L26:
 317 0008 00000000 		.word	huart6
 318              		.cfi_endproc
 319              	.LFE145:
 321              		.text
 322              	.Letext0:
 323              		.file 2 "d:\\msys2\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 324              		.file 3 "d:\\msys2\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 325              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 326              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 327              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 328              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 329              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 330              		.file 9 "Core/Inc/usart.h"
ARM GAS  D:\MSYS2\tmp\ccI0kcBM.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
D:\MSYS2\tmp\ccI0kcBM.s:21     .text.NMI_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:28     .text.NMI_Handler:00000000 NMI_Handler
D:\MSYS2\tmp\ccI0kcBM.s:45     .text.HardFault_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:52     .text.HardFault_Handler:00000000 HardFault_Handler
D:\MSYS2\tmp\ccI0kcBM.s:69     .text.MemManage_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:76     .text.MemManage_Handler:00000000 MemManage_Handler
D:\MSYS2\tmp\ccI0kcBM.s:93     .text.BusFault_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:100    .text.BusFault_Handler:00000000 BusFault_Handler
D:\MSYS2\tmp\ccI0kcBM.s:117    .text.UsageFault_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:124    .text.UsageFault_Handler:00000000 UsageFault_Handler
D:\MSYS2\tmp\ccI0kcBM.s:141    .text.SVC_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:148    .text.SVC_Handler:00000000 SVC_Handler
D:\MSYS2\tmp\ccI0kcBM.s:161    .text.DebugMon_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:168    .text.DebugMon_Handler:00000000 DebugMon_Handler
D:\MSYS2\tmp\ccI0kcBM.s:180    .text.PendSV_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:187    .text.PendSV_Handler:00000000 PendSV_Handler
D:\MSYS2\tmp\ccI0kcBM.s:199    .text.SysTick_Handler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:206    .text.SysTick_Handler:00000000 SysTick_Handler
D:\MSYS2\tmp\ccI0kcBM.s:218    .text.TIM1_BRK_TIM9_IRQHandler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:225    .text.TIM1_BRK_TIM9_IRQHandler:00000000 TIM1_BRK_TIM9_IRQHandler
D:\MSYS2\tmp\ccI0kcBM.s:239    .text.TIM1_BRK_TIM9_IRQHandler:00000008 $d
D:\MSYS2\tmp\ccI0kcBM.s:244    .text.USART2_IRQHandler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:251    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
D:\MSYS2\tmp\ccI0kcBM.s:265    .text.USART2_IRQHandler:00000008 $d
D:\MSYS2\tmp\ccI0kcBM.s:270    .text.TIM7_IRQHandler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:277    .text.TIM7_IRQHandler:00000000 TIM7_IRQHandler
D:\MSYS2\tmp\ccI0kcBM.s:291    .text.TIM7_IRQHandler:00000008 $d
D:\MSYS2\tmp\ccI0kcBM.s:296    .text.USART6_IRQHandler:00000000 $t
D:\MSYS2\tmp\ccI0kcBM.s:303    .text.USART6_IRQHandler:00000000 USART6_IRQHandler
D:\MSYS2\tmp\ccI0kcBM.s:317    .text.USART6_IRQHandler:00000008 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim9
HAL_UART_IRQHandler
huart2
htim7
huart6
